<style>
  #shopify-section-{{ section.id }} {
    margin-top: 3rem;
    margin-bottom: 3rem;
  }
  #shopify-section-{{ section.id }} * {
    box-sizing: border-box;
  }
</style>

<div class="product-carousel__container page-width-desktop">
  <div class="embla-{{ section.id }} carousel_container">
    <div class="product-carousel__header_and_buttons">
      <h3>{{ section.settings.section_header_text }}</h3>
      <div class="product-carousel__prev_next_box">
        <button id="product-carousel__prev_button">
          {% render 'icon'
            , icon: 'left-arrow' %}
        </button>
        <button id="product-carousel__next_button">
          {% render 'icon'
            , icon: 'right-arrow' %}
        </button>
      </div>
    </div>
    <div class="embla-viewport">
      <div class="embla__container">
        {% for card_product in section.settings.collection.products %}
          {% render 'card-product-v2'
            , card_product: card_product %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const emblaNode = document.querySelector('.embla-{{ section.id }}')
    const emblaViewport = emblaNode.querySelector('.embla-viewport')
    const emblaPrevButton = emblaNode.querySelector('#product-carousel__prev_button')
    const emblaNextButton = emblaNode.querySelector('#product-carousel__next_button')

    const options = {
      loop: false,
      breakpoints: {
        '(max-width: 500px)': { slidesToScroll: 1 },
        '(min-width: 500px)': { slidesToScroll: 2 },
        '(min-width: 900px)': { slidesToScroll: 3 },
        '(min-width: 1100px)': { slidesToScroll: 4 },
      },
    }
    const emblaApi = EmblaCarousel(emblaViewport, options)

    const togglePrevNextBtnsState = () => {
    if (emblaApi.canScrollPrev()) emblaPrevButton.removeAttribute('disabled')
    else emblaPrevButton.setAttribute('disabled', 'true')

    if (emblaApi.canScrollNext()) emblaNextButton.removeAttribute('disabled')
    else emblaNextButton.setAttribute('disabled', 'true')
  }

  emblaApi
    .on('select', togglePrevNextBtnsState)
    .on('init', togglePrevNextBtnsState)
    .on('reInit', togglePrevNextBtnsState)

    emblaPrevButton.addEventListener('click', emblaApi.scrollPrev)
    emblaNextButton.addEventListener('click', emblaApi.scrollNext)
  });
</script>

{% schema %}
  {
    "name": "Product Carousel",
    "settings": [
      {
        "type": "text",
        "id": "section_header_text",
        "default": "Carousel Title",
        "label": "Section Header"
      }, {
        "type": "collection",
        "id": "collection",
        "label": "Collection"
      }
    ],
    "presets": [
      {
        "name": "Product Carousel",
        "category": "Products"
      }
    ]
  }
{% endschema %}